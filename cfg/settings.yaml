name: rabbit
keybinds:
  compile: "!c"
  launch: "!`"
  iterate: "!v"
  pc_close_loop: "!+v"


paths:
  trenchbroom: I:\Quake\TrenchBroom-Win64-v2024.1-Release
  trenchbroom_preferences: C:\Users\Rabbit\AppData\Roaming\TrenchBroom\Preferences.json
  ericw: I:\Quake\ericw
  engine_exes:
    - I:\Quake\Game\engines\quakespasm.exe
    - I:\Quake\Game\engines\ironwail.exe
  configs: I:\Quake\cfg
  maps: I:\Quake\Dev\maps

cfg_whitelist:
  remobilize.cfg:
    - remobilize_test15


# search through key-value pairs per entity
# relevant variables:
#
# entity
#   a dataclass. the relevant dictionary is `entity.kv`
# output
#   a string (used as a Path pattern) that the program will look for
dependencies:
  # sound effects
  - name: SOUND_EFFECTS
    destination: sound
    eval: "[value for key, value in entity.kv.items() if value.endswith('.wav')]"
  # models
  - name: MODELS
    destination: "*"
    eval: "[value for key, value in entity.kv.items() if value.endswith('.mdl')]"
  # skyboxes
  - name: SKYBOXES
    destination: gfx/env
    eval: "entity.kv.get('sky') + '*'"
  # music
  - name: MUSIC
    destination: music
    exec: |
      if entity.kv['classname'] in ['worldspawn, misc_changemusic']:
        output = "track" + entity.kv.get('sounds') + ".*"


# if the path pattern contains "**" then full_match() will be used
# otherwise, just match()
jampack:
  deny:
    - regex: 'autosave..+\.\d+\.map'
    - path: "*.prt"
    - path: "*.log"
    - path: "*.texinfo.json"
  allow:
    - patterns:
        - path: "*.map"
      destination: mapsrc
    - patterns:
        - path: descript.ion
        - path: "*.def"
        - path: "*.fgd"
        - path: "*.json"
        - path: "*.pak"
        - path: "*.dat"
        - path: "*.rc"
      destination: .
    - patterns:
        - path: readme/*
        - path: "*.txt"
        - path: "*.html"
        - path: "*.md"
      destination: readme
    - patterns:
        - path: "*.bsp"
        - path: "*.lit"
      destination: maps
    - patterns:
        - path: "**/gfx/env/**"
        - path: "*.tga"
      destination: gfx/env


# whitelist for files
submit:
  allowed:
    - mapsrc/*.map
    - sound/**/*.wav
    - music/*
    - track*.*
    - maps/*.bsp
    - maps/*.lit
    - gfx/env/*.tga
    - gfx/env/**/*.tga
    - readme/*
    - progs/**/*.mdl


template:
  touch: # folders to create
    - maps
    - mapsrc
    - music
    - gfx/env/{mapstem}
    - sound/{mapstem}
    - progs/{mapstem}
    - readme
    - build
  copy: # files to copy
    - file: assets\template.map
      destination: mapsrc/{mapstem}.map
    - file: assets\template.yaml
      destination: mapsrc/{mapstem}.yaml
    - file: assets/todo.md
      destination: todo.md
    - file: assets/readme.md
      destination: readme/{mapstem}.md


ericw:
  bsp: maps
  src: mapsrc
  profiles:
    - name: dev
      qbsp:
        - -bsp2
        - -verbose
      vis:
        - -fast
        - -vv
      light:
        - -dirtdebug
    - name: submit
      qbsp:
        - -leaktest
        - -bsp2
        - -splitturb
      vis:
        - -noambient
      light:
        - -extra4


symlink:
  - target: gfx/env/{mapstem}
    destination: gfx/env
  - target: sound/{mapstem}
    destination: sound
  - target: maps/*.bsp
    destination: maps
  - target: maps/*.lit
    destination: maps
  - target: music/track*.*
    destination: music
